"use strict";
// file: src/save.ts
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.saveOnFileSystem = exports.saveOnLocalStorage = exports.save = void 0;
const save = (key, value) => __awaiter(void 0, void 0, void 0, function* () {
    // detect if we are in the browser or in node
    if (typeof window !== 'undefined')
        yield (0, exports.saveOnLocalStorage)(key, value);
    else
        yield (0, exports.saveOnFileSystem)(key, value);
});
exports.save = save;
const saveOnLocalStorage = (key, value) => __awaiter(void 0, void 0, void 0, function* () {
    if (typeof window !== 'undefined')
        // save on local storage
        localStorage.setItem(key, JSON.stringify(value));
    else
        throw new Error('This function can only be used in the browser');
});
exports.saveOnLocalStorage = saveOnLocalStorage;
const saveOnFileSystem = (key, value) => __awaiter(void 0, void 0, void 0, function* () {
    if (typeof window === 'undefined') {
        // save on file system
        const fs = yield Promise.resolve().then(() => __importStar(require('fs/promises')));
        // Check if value is already a string to avoid unnecessary JSON string conversion
        const data = typeof value === 'string' ? value : JSON.stringify(value);
        yield fs.writeFile(key, JSON.stringify(data));
    }
    else
        throw new Error('This function can only be used in node');
});
exports.saveOnFileSystem = saveOnFileSystem;
