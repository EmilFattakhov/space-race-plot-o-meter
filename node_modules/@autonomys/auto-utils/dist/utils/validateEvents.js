"use strict";
// file: src/utils/validateEvents.ts
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateEvents = void 0;
const events_1 = require("./events");
const validateEvents = (events, eventsExpected = events_1.expectSuccessfulTxEvent, tx, block, log = false) => {
    const _eventsExpected = typeof eventsExpected === 'string'
        ? [eventsExpected]
        : eventsExpected.map((e) => (typeof e === 'string' ? [e] : e)).flat();
    const found = [];
    events.forEach(({ event: { data, method, section } }) => {
        const index = _eventsExpected.indexOf(`${section}.${method}`);
        if (index > -1) {
            _eventsExpected.splice(index, 1);
            found.push(`${section}.${method}`);
        }
        else if (log)
            console.log('Event not expected', `${section}.${method}`, 'tx', tx, 'block', block);
    });
    if (_eventsExpected.length > 0)
        console.log('Events not found', _eventsExpected, 'tx', tx, 'block', block);
    return { expected: _eventsExpected, found };
};
exports.validateEvents = validateEvents;
