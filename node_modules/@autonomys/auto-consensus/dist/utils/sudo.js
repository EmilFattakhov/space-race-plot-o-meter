"use strict";
// file: src/utils/sudo.ts
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.sudo = void 0;
const auto_utils_1 = require("@autonomys/auto-utils");
const events_1 = require("./events");
const sudo = (api_1, sender_1, tx_1, ...args_1) => __awaiter(void 0, [api_1, sender_1, tx_1, ...args_1], void 0, function* (api, sender, tx, options = {}, eventsExpected = events_1.expectSuccessfulTxEvent, log = true) { return yield (0, auto_utils_1.signAndSendTx)(sender, api.tx.sudo.sudo(tx), options, eventsExpected, log); });
exports.sudo = sudo;
